{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaurt\\\\Documents\\\\PROJECTS\\\\qr\\\\client\\\\src\\\\components\\\\MarkAttendance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Html5Qrcode } from 'html5-qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkAttendance = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [scanned, setScanned] = useState(false);\n  const qrScannerRef = useRef(null); // Ref to keep scanner instance\n\n  useEffect(() => {\n    const scanQRCode = async () => {\n      const devices = await Html5Qrcode.getCameras();\n      if (devices && devices.length) {\n        const frontCam = devices.find(device => device.label.toLowerCase().includes('front')) || devices[0]; // fallback to first device\n\n        const html5QrCode = new Html5Qrcode(\"qr-reader\");\n        qrScannerRef.current = html5QrCode; // Store instance\n\n        html5QrCode.start(frontCam.id, {\n          fps: 10,\n          qrbox: {\n            width: 250,\n            height: 250\n          }\n        }, async decodedText => {\n          if (!scanned) {\n            setScanned(true);\n            console.log(\"Scanned QR Token:\", decodedText);\n            try {\n              const res = await fetch('http://localhost:5000/api/attendance/mark', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  qrToken: decodedText\n                })\n              });\n              const result = await res.json();\n              setMessage(result.message || 'Attendance marked');\n            } catch (error) {\n              console.error('Error:', error);\n              setMessage('Failed to mark attendance.');\n            }\n\n            // Pause scanner for a few seconds before resuming\n            await html5QrCode.pause();\n            setTimeout(async () => {\n              setScanned(false);\n              await html5QrCode.resume();\n            }, 3000);\n          }\n        }, error => {\n          console.warn('QR scan error:', error);\n        });\n      } else {\n        setMessage(\"No camera found.\");\n      }\n    };\n    scanQRCode();\n\n    // Cleanup on component unmount\n    return () => {\n      if (qrScannerRef.current && qrScannerRef.current._isScanning) {\n        qrScannerRef.current.stop().then(() => qrScannerRef.current.clear()).catch(err => console.warn(\"Stop failed:\", err));\n      }\n    };\n  }, [scanned]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mark Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Align the QR code in the box to scan.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"qr-reader\",\n      style: {\n        width: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(MarkAttendance, \"UYT5zdIYnA/ZLzEbSHqqpqQljL8=\");\n_c = MarkAttendance;\nexport default MarkAttendance;\nvar _c;\n$RefreshReg$(_c, \"MarkAttendance\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Html5Qrcode","jsxDEV","_jsxDEV","MarkAttendance","_s","message","setMessage","scanned","setScanned","qrScannerRef","scanQRCode","devices","getCameras","length","frontCam","find","device","label","toLowerCase","includes","html5QrCode","current","start","id","fps","qrbox","width","height","decodedText","console","log","res","fetch","method","headers","body","JSON","stringify","qrToken","result","json","error","pause","setTimeout","resume","warn","_isScanning","stop","then","clear","catch","err","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kaurt/Documents/PROJECTS/qr/client/src/components/MarkAttendance.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Html5Qrcode } from 'html5-qrcode';\r\n\r\nconst MarkAttendance = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [scanned, setScanned] = useState(false);\r\n  const qrScannerRef = useRef(null); // Ref to keep scanner instance\r\n\r\n  useEffect(() => {\r\n    const scanQRCode = async () => {\r\n      const devices = await Html5Qrcode.getCameras();\r\n      if (devices && devices.length) {\r\n        const frontCam = devices.find(device =>\r\n          device.label.toLowerCase().includes('front')\r\n        ) || devices[0]; // fallback to first device\r\n\r\n        const html5QrCode = new Html5Qrcode(\"qr-reader\");\r\n        qrScannerRef.current = html5QrCode; // Store instance\r\n\r\n        html5QrCode.start(\r\n          frontCam.id,\r\n          {\r\n            fps: 10,\r\n            qrbox: { width: 250, height: 250 },\r\n          },\r\n          async (decodedText) => {\r\n            if (!scanned) {\r\n              setScanned(true);\r\n              console.log(\"Scanned QR Token:\", decodedText);\r\n\r\n              try {\r\n                const res = await fetch('http://localhost:5000/api/attendance/mark', {\r\n                  method: 'POST',\r\n                  headers: { 'Content-Type': 'application/json' },\r\n                  body: JSON.stringify({ qrToken: decodedText }),\r\n                });\r\n\r\n                const result = await res.json();\r\n                setMessage(result.message || 'Attendance marked');\r\n              } catch (error) {\r\n                console.error('Error:', error);\r\n                setMessage('Failed to mark attendance.');\r\n              }\r\n\r\n              // Pause scanner for a few seconds before resuming\r\n              await html5QrCode.pause();\r\n              setTimeout(async () => {\r\n                setScanned(false);\r\n                await html5QrCode.resume();\r\n              }, 3000);\r\n            }\r\n          },\r\n          (error) => {\r\n            console.warn('QR scan error:', error);\r\n          }\r\n        );\r\n      } else {\r\n        setMessage(\"No camera found.\");\r\n      }\r\n    };\r\n\r\n    scanQRCode();\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      if (qrScannerRef.current && qrScannerRef.current._isScanning) {\r\n        qrScannerRef.current\r\n          .stop()\r\n          .then(() => qrScannerRef.current.clear())\r\n          .catch(err => console.warn(\"Stop failed:\", err));\r\n      }\r\n    };\r\n  }, [scanned]);\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Mark Attendance</h2>\r\n      <p>Align the QR code in the box to scan.</p>\r\n      <div id=\"qr-reader\" style={{ width: '300px' }}></div>\r\n      {message && <p><strong>{message}</strong></p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkAttendance;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMU,YAAY,GAAGX,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEnCD,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,OAAO,GAAG,MAAMX,WAAW,CAACY,UAAU,CAAC,CAAC;MAC9C,IAAID,OAAO,IAAIA,OAAO,CAACE,MAAM,EAAE;QAC7B,MAAMC,QAAQ,GAAGH,OAAO,CAACI,IAAI,CAACC,MAAM,IAClCA,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,OAAO,CAC7C,CAAC,IAAIR,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEjB,MAAMS,WAAW,GAAG,IAAIpB,WAAW,CAAC,WAAW,CAAC;QAChDS,YAAY,CAACY,OAAO,GAAGD,WAAW,CAAC,CAAC;;QAEpCA,WAAW,CAACE,KAAK,CACfR,QAAQ,CAACS,EAAE,EACX;UACEC,GAAG,EAAE,EAAE;UACPC,KAAK,EAAE;YAAEC,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAI;QACnC,CAAC,EACD,MAAOC,WAAW,IAAK;UACrB,IAAI,CAACrB,OAAO,EAAE;YACZC,UAAU,CAAC,IAAI,CAAC;YAChBqB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,WAAW,CAAC;YAE7C,IAAI;cACF,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;gBACnEC,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBAAE,cAAc,EAAE;gBAAmB,CAAC;gBAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;kBAAEC,OAAO,EAAEV;gBAAY,CAAC;cAC/C,CAAC,CAAC;cAEF,MAAMW,MAAM,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;cAC/BlC,UAAU,CAACiC,MAAM,CAAClC,OAAO,IAAI,mBAAmB,CAAC;YACnD,CAAC,CAAC,OAAOoC,KAAK,EAAE;cACdZ,OAAO,CAACY,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;cAC9BnC,UAAU,CAAC,4BAA4B,CAAC;YAC1C;;YAEA;YACA,MAAMc,WAAW,CAACsB,KAAK,CAAC,CAAC;YACzBC,UAAU,CAAC,YAAY;cACrBnC,UAAU,CAAC,KAAK,CAAC;cACjB,MAAMY,WAAW,CAACwB,MAAM,CAAC,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC;UACV;QACF,CAAC,EACAH,KAAK,IAAK;UACTZ,OAAO,CAACgB,IAAI,CAAC,gBAAgB,EAAEJ,KAAK,CAAC;QACvC,CACF,CAAC;MACH,CAAC,MAAM;QACLnC,UAAU,CAAC,kBAAkB,CAAC;MAChC;IACF,CAAC;IAEDI,UAAU,CAAC,CAAC;;IAEZ;IACA,OAAO,MAAM;MACX,IAAID,YAAY,CAACY,OAAO,IAAIZ,YAAY,CAACY,OAAO,CAACyB,WAAW,EAAE;QAC5DrC,YAAY,CAACY,OAAO,CACjB0B,IAAI,CAAC,CAAC,CACNC,IAAI,CAAC,MAAMvC,YAAY,CAACY,OAAO,CAAC4B,KAAK,CAAC,CAAC,CAAC,CACxCC,KAAK,CAACC,GAAG,IAAItB,OAAO,CAACgB,IAAI,CAAC,cAAc,EAAEM,GAAG,CAAC,CAAC;MACpD;IACF,CAAC;EACH,CAAC,EAAE,CAAC5C,OAAO,CAAC,CAAC;EAEb,oBACEL,OAAA;IAAKkD,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BpD,OAAA;MAAAoD,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBxD,OAAA;MAAAoD,QAAA,EAAG;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5CxD,OAAA;MAAKqB,EAAE,EAAC,WAAW;MAAC6B,KAAK,EAAE;QAAE1B,KAAK,EAAE;MAAQ;IAAE;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACpDrD,OAAO,iBAAIH,OAAA;MAAAoD,QAAA,eAAGpD,OAAA;QAAAoD,QAAA,EAASjD;MAAO;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACtD,EAAA,CA/EID,cAAc;AAAAwD,EAAA,GAAdxD,cAAc;AAiFpB,eAAeA,cAAc;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}