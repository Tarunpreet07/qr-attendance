{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaurt\\\\Documents\\\\PROJECTS\\\\qr\\\\client\\\\src\\\\components\\\\MarkAttendance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Html5Qrcode, Html5QrcodeScanner, Html5QrcodeScanType } from 'html5-qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkAttendance = () => {\n  _s();\n  const {\n    id: sessionId\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [scanned, setScanned] = useState(false);\n  const [cameraError, setCameraError] = useState('');\n  const qrRef = useRef(null);\n\n  // âœ… SUCCESS handler\n  const handleScan = async data => {\n    if (data && !scanned) {\n      setScanned(true);\n      try {\n        const res = await fetch('http://localhost:5000/api/attendance/mark', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            qrToken: data,\n            sessionId\n          })\n        });\n        const result = await res.json();\n        setMessage(result.message || 'Attendance marked');\n      } catch (err) {\n        console.error('Error:', err);\n        setMessage('Failed to mark attendance.');\n      }\n      setTimeout(() => setScanned(false), 3000); // allow next scan\n    }\n  };\n\n  // âœ… ERROR handler\n  const handleError = err => {\n    console.error('QR Error:', err);\n    setCameraError('QR scanner failed. Try uploading an image.');\n  };\n\n  // âœ… Start scanner with rear camera\n  useEffect(() => {\n    if (!qrRef.current) return;\n    Html5Qrcode.getCameras().then(devices => {\n      if (devices && devices.length) {\n        const backCamera = devices.find(d => d.label.toLowerCase().includes('back')) || devices[0];\n        const html5QrCode = new Html5Qrcode(qrRef.current.id);\n        html5QrCode.start(backCamera.id, {\n          fps: 10,\n          qrbox: {\n            width: 250,\n            height: 250\n          },\n          aspectRatio: 1.0\n        }, handleScan, handleError);\n        return () => html5QrCode.stop().catch(console.warn);\n      } else {\n        setCameraError('No camera found.');\n      }\n    }).catch(err => {\n      setCameraError('Camera error. Try uploading QR code.');\n      console.error(err);\n    });\n  }, []);\n\n  // âœ… Scan from uploaded image\n  const scanImage = file => {\n    const html5QrCode = new Html5Qrcode(qrRef.current.id);\n    html5QrCode.scanFile(file, true).then(qrCodeMessage => {\n      handleScan(qrCodeMessage);\n    }).catch(err => {\n      console.error(\"Scan image failed:\", err);\n      setMessage(\"Couldn't read QR from image.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mark Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Scan the student\\u2019s QR code for this session.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"qr-reader\",\n      ref: qrRef,\n      style: {\n        width: '300px',\n        height: '300px',\n        border: '2px dashed #ccc',\n        borderRadius: '10px',\n        padding: '10px',\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83D\\uDCF8 Upload QR Code Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => {\n          if (e.target.files.length > 0) {\n            scanImage(e.target.files[0]);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }, this), cameraError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: cameraError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(MarkAttendance, \"QAq9PV3wUUK+Sto6cNtC7fBY7p4=\", false, function () {\n  return [useParams];\n});\n_c = MarkAttendance;\nexport default MarkAttendance;\nvar _c;\n$RefreshReg$(_c, \"MarkAttendance\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","Html5Qrcode","Html5QrcodeScanner","Html5QrcodeScanType","jsxDEV","_jsxDEV","MarkAttendance","_s","id","sessionId","message","setMessage","scanned","setScanned","cameraError","setCameraError","qrRef","handleScan","data","res","fetch","method","headers","body","JSON","stringify","qrToken","result","json","err","console","error","setTimeout","handleError","current","getCameras","then","devices","length","backCamera","find","d","label","toLowerCase","includes","html5QrCode","start","fps","qrbox","width","height","aspectRatio","stop","catch","warn","scanImage","file","scanFile","qrCodeMessage","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","borderRadius","marginBottom","type","accept","onChange","e","target","files","color","_c","$RefreshReg$"],"sources":["C:/Users/kaurt/Documents/PROJECTS/qr/client/src/components/MarkAttendance.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Html5Qrcode, Html5QrcodeScanner, Html5QrcodeScanType } from 'html5-qrcode';\r\n\r\n\r\nconst MarkAttendance = () => {\r\n  const { id: sessionId } = useParams();\r\n  const [message, setMessage] = useState('');\r\n  const [scanned, setScanned] = useState(false);\r\n  const [cameraError, setCameraError] = useState('');\r\n  const qrRef = useRef(null);\r\n\r\n  // âœ… SUCCESS handler\r\n  const handleScan = async (data) => {\r\n    if (data && !scanned) {\r\n      setScanned(true);\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/attendance/mark', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ qrToken: data, sessionId }),\r\n        });\r\n\r\n        const result = await res.json();\r\n        setMessage(result.message || 'Attendance marked');\r\n      } catch (err) {\r\n        console.error('Error:', err);\r\n        setMessage('Failed to mark attendance.');\r\n      }\r\n\r\n      setTimeout(() => setScanned(false), 3000); // allow next scan\r\n    }\r\n  };\r\n\r\n  // âœ… ERROR handler\r\n  const handleError = (err) => {\r\n    console.error('QR Error:', err);\r\n    setCameraError('QR scanner failed. Try uploading an image.');\r\n  };\r\n\r\n  // âœ… Start scanner with rear camera\r\n  useEffect(() => {\r\n    if (!qrRef.current) return;\r\n\r\n    Html5Qrcode.getCameras().then(devices => {\r\n      if (devices && devices.length) {\r\n        const backCamera = devices.find(d => d.label.toLowerCase().includes('back')) || devices[0];\r\n        const html5QrCode = new Html5Qrcode(qrRef.current.id);\r\n\r\n        html5QrCode.start(\r\n          backCamera.id,\r\n          {\r\n            fps: 10,\r\n            qrbox: { width: 250, height: 250 },\r\n            aspectRatio: 1.0\r\n          },\r\n          handleScan,\r\n          handleError\r\n        );\r\n\r\n        return () => html5QrCode.stop().catch(console.warn);\r\n      } else {\r\n        setCameraError('No camera found.');\r\n      }\r\n    }).catch(err => {\r\n      setCameraError('Camera error. Try uploading QR code.');\r\n      console.error(err);\r\n    });\r\n  }, []);\r\n\r\n  // âœ… Scan from uploaded image\r\n  const scanImage = (file) => {\r\n    const html5QrCode = new Html5Qrcode(qrRef.current.id);\r\n    html5QrCode.scanFile(file, true)\r\n      .then(qrCodeMessage => {\r\n        handleScan(qrCodeMessage);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Scan image failed:\", err);\r\n        setMessage(\"Couldn't read QR from image.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Mark Attendance</h2>\r\n      <p>Scan the studentâ€™s QR code for this session.</p>\r\n\r\n      <div\r\n        id=\"qr-reader\"\r\n        ref={qrRef}\r\n        style={{\r\n          width: '300px',\r\n          height: '300px',\r\n          border: '2px dashed #ccc',\r\n          borderRadius: '10px',\r\n          padding: '10px',\r\n          marginBottom: '10px'\r\n        }}\r\n      ></div>\r\n\r\n      <div>\r\n        <label><strong>ðŸ“¸ Upload QR Code Image:</strong></label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={(e) => {\r\n            if (e.target.files.length > 0) {\r\n              scanImage(e.target.files[0]);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {message && <p><strong>{message}</strong></p>}\r\n      {cameraError && <p style={{ color: 'red' }}>{cameraError}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkAttendance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}