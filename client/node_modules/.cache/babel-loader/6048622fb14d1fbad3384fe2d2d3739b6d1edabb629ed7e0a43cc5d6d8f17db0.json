{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaurt\\\\Documents\\\\PROJECTS\\\\qr\\\\client\\\\src\\\\components\\\\MarkAttendance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Html5Qrcode } from 'html5-qrcode';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkAttendance = () => {\n  _s();\n  const {\n    sessionId,\n    sessionName\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [scanned, setScanned] = useState(false);\n  useEffect(() => {\n    const scanQRCode = async () => {\n      const devices = await Html5Qrcode.getCameras();\n      if (devices.length) {\n        const frontCam = devices.find(device => device.label.toLowerCase().includes('front')) || devices[0];\n        const html5QrCode = new Html5Qrcode(\"qr-reader\");\n        html5QrCode.start(frontCam.id, {\n          fps: 10,\n          qrbox: {\n            width: 250,\n            height: 250\n          }\n        }, async decodedText => {\n          if (!scanned) {\n            setScanned(true);\n            try {\n              const parsed = JSON.parse(decodedText);\n              const {\n                studentId,\n                studentName\n              } = parsed;\n              if (!studentId || !studentName) {\n                setMessage(\"❌ QR code missing student info.\");\n                return;\n              }\n              const res = await fetch('http://localhost:5000/api/attendance/mark', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  studentId,\n                  studentName,\n                  sessionId,\n                  sessionName\n                })\n              });\n              const result = await res.json();\n              setMessage(result.message || '✅ Attendance marked successfully!');\n            } catch (err) {\n              console.error(\"QR Scan or API error\", err);\n              setMessage(\"❌ Invalid QR code or server error.\");\n            }\n            setTimeout(() => setScanned(false), 3000);\n          }\n        }, error => {\n          console.warn(\"QR scanning error:\", error);\n        });\n      } else {\n        setMessage(\"❌ No camera found.\");\n      }\n    };\n    scanQRCode();\n    return () => {\n      Html5Qrcode.getCameras().then(devices => {\n        if (devices.length) {\n          const html5QrCode = new Html5Qrcode(\"qr-reader\");\n          html5QrCode.stop().catch(err => console.log(\"Stop failed\", err));\n        }\n      });\n    };\n  }, [scanned, sessionId, sessionName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mark Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Session: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: sessionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this), \" (ID: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: sessionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 55\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"qr-reader\",\n      style: {\n        width: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(MarkAttendance, \"AXSIXRzRPRRtKjszTzhjb77EwBE=\", false, function () {\n  return [useParams];\n});\n_c = MarkAttendance;\nexport default MarkAttendance;\nvar _c;\n$RefreshReg$(_c, \"MarkAttendance\");","map":{"version":3,"names":["React","useEffect","useState","Html5Qrcode","useParams","jsxDEV","_jsxDEV","MarkAttendance","_s","sessionId","sessionName","message","setMessage","scanned","setScanned","scanQRCode","devices","getCameras","length","frontCam","find","device","label","toLowerCase","includes","html5QrCode","start","id","fps","qrbox","width","height","decodedText","parsed","JSON","parse","studentId","studentName","res","fetch","method","headers","body","stringify","result","json","err","console","error","setTimeout","warn","then","stop","catch","log","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kaurt/Documents/PROJECTS/qr/client/src/components/MarkAttendance.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Html5Qrcode } from 'html5-qrcode';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MarkAttendance = () => {\r\n  const { sessionId, sessionName } = useParams();\r\n  const [message, setMessage] = useState('');\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const scanQRCode = async () => {\r\n      const devices = await Html5Qrcode.getCameras();\r\n      if (devices.length) {\r\n        const frontCam = devices.find(device =>\r\n          device.label.toLowerCase().includes('front')\r\n        ) || devices[0];\r\n\r\n        const html5QrCode = new Html5Qrcode(\"qr-reader\");\r\n\r\n        html5QrCode.start(\r\n          frontCam.id,\r\n          { fps: 10, qrbox: { width: 250, height: 250 } },\r\n          async (decodedText) => {\r\n            if (!scanned) {\r\n              setScanned(true);\r\n\r\n              try {\r\n                const parsed = JSON.parse(decodedText);\r\n                const { studentId, studentName } = parsed;\r\n\r\n                if (!studentId || !studentName) {\r\n                  setMessage(\"❌ QR code missing student info.\");\r\n                  return;\r\n                }\r\n\r\n                const res = await fetch('http://localhost:5000/api/attendance/mark', {\r\n                  method: 'POST',\r\n                  headers: { 'Content-Type': 'application/json' },\r\n                  body: JSON.stringify({\r\n                    studentId,\r\n                    studentName,\r\n                    sessionId,\r\n                    sessionName\r\n                  }),\r\n                });\r\n\r\n                const result = await res.json();\r\n                setMessage(result.message || '✅ Attendance marked successfully!');\r\n              } catch (err) {\r\n                console.error(\"QR Scan or API error\", err);\r\n                setMessage(\"❌ Invalid QR code or server error.\");\r\n              }\r\n\r\n              setTimeout(() => setScanned(false), 3000);\r\n            }\r\n          },\r\n          (error) => {\r\n            console.warn(\"QR scanning error:\", error);\r\n          }\r\n        );\r\n      } else {\r\n        setMessage(\"❌ No camera found.\");\r\n      }\r\n    };\r\n\r\n    scanQRCode();\r\n\r\n    return () => {\r\n      Html5Qrcode.getCameras().then(devices => {\r\n        if (devices.length) {\r\n          const html5QrCode = new Html5Qrcode(\"qr-reader\");\r\n          html5QrCode.stop().catch(err => console.log(\"Stop failed\", err));\r\n        }\r\n      });\r\n    };\r\n  }, [scanned, sessionId, sessionName]);\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Mark Attendance</h2>\r\n      <p>Session: <strong>{sessionName}</strong> (ID: <strong>{sessionId}</strong>)</p>\r\n      <div id=\"qr-reader\" style={{ width: '300px' }}></div>\r\n      {message && <p><strong>{message}</strong></p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkAttendance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}