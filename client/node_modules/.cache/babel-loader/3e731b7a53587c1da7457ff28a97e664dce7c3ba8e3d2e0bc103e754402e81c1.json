{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaurt\\\\Documents\\\\PROJECTS\\\\qr\\\\client\\\\src\\\\components\\\\MarkAttendance.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/MarkAttendance.js\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QrReader from 'react-qr-reader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkAttendance = () => {\n  _s();\n  const {\n    id: sessionId\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [scanned, setScanned] = useState(false);\n  const handleScan = async data => {\n    if (data && !scanned) {\n      setScanned(true); // prevent multiple rapid scans\n\n      try {\n        const res = await fetch('http://localhost:5000/api/attendance/mark', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            qrToken: data,\n            sessionId\n          })\n        });\n        const result = await res.json();\n        setMessage(result.message || 'Attendance marked');\n      } catch (err) {\n        console.error('Error:', err);\n        setMessage('Failed to mark attendance.');\n      }\n      setTimeout(() => {\n        setScanned(false); // allow next scan after delay\n      }, 3000);\n    }\n  };\n  const handleError = err => {\n    console.error('QR Error:', err);\n    setMessage('QR scanner error.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mark Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Scan student's QR code to mark attendance for this session.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n      delay: 300,\n      onError: handleError,\n      onScan: handleScan,\n      style: {\n        width: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MarkAttendance, \"ePgGk7oQSbHTvPRYxM1ZHUGiT0M=\", false, function () {\n  return [useParams];\n});\n_c = MarkAttendance;\nexport default MarkAttendance;\nvar _c;\n$RefreshReg$(_c, \"MarkAttendance\");","map":{"version":3,"names":["React","useState","useParams","QrReader","jsxDEV","_jsxDEV","MarkAttendance","_s","id","sessionId","message","setMessage","scanned","setScanned","handleScan","data","res","fetch","method","headers","body","JSON","stringify","qrToken","result","json","err","console","error","setTimeout","handleError","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","delay","onError","onScan","width","_c","$RefreshReg$"],"sources":["C:/Users/kaurt/Documents/PROJECTS/qr/client/src/components/MarkAttendance.js"],"sourcesContent":["// frontend/src/pages/MarkAttendance.js\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport QrReader from 'react-qr-reader';\r\n\r\nconst MarkAttendance = () => {\r\n  const { id: sessionId } = useParams();\r\n  const [message, setMessage] = useState('');\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  const handleScan = async (data) => {\r\n    if (data && !scanned) {\r\n      setScanned(true);  // prevent multiple rapid scans\r\n\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/attendance/mark', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ qrToken: data, sessionId }),\r\n        });\r\n\r\n        const result = await res.json();\r\n        setMessage(result.message || 'Attendance marked');\r\n      } catch (err) {\r\n        console.error('Error:', err);\r\n        setMessage('Failed to mark attendance.');\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setScanned(false); // allow next scan after delay\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error('QR Error:', err);\r\n    setMessage('QR scanner error.');\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Mark Attendance</h2>\r\n      <p>Scan student's QR code to mark attendance for this session.</p>\r\n\r\n      <QrReader\r\n        delay={300}\r\n        onError={handleError}\r\n        onScan={handleScan}\r\n        style={{ width: '300px' }}\r\n      />\r\n\r\n      {message && <p><strong>{message}</strong></p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkAttendance;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,EAAE,EAAEC;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC;EACrC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,UAAU,GAAG,MAAOC,IAAI,IAAK;IACjC,IAAIA,IAAI,IAAI,CAACH,OAAO,EAAE;MACpBC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAE;;MAEnB,IAAI;QACF,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;UACnEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,OAAO,EAAER,IAAI;YAAEN;UAAU,CAAC;QACnD,CAAC,CAAC;QAEF,MAAMe,MAAM,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;QAC/Bd,UAAU,CAACa,MAAM,CAACd,OAAO,IAAI,mBAAmB,CAAC;MACnD,CAAC,CAAC,OAAOgB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEF,GAAG,CAAC;QAC5Bf,UAAU,CAAC,4BAA4B,CAAC;MAC1C;MAEAkB,UAAU,CAAC,MAAM;QACfhB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,MAAMiB,WAAW,GAAIJ,GAAG,IAAK;IAC3BC,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEF,GAAG,CAAC;IAC/Bf,UAAU,CAAC,mBAAmB,CAAC;EACjC,CAAC;EAED,oBACEN,OAAA;IAAK0B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B5B,OAAA;MAAA4B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBhC,OAAA;MAAA4B,QAAA,EAAG;IAA2D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAElEhC,OAAA,CAACF,QAAQ;MACPmC,KAAK,EAAE,GAAI;MACXC,OAAO,EAAET,WAAY;MACrBU,MAAM,EAAE1B,UAAW;MACnBiB,KAAK,EAAE;QAAEU,KAAK,EAAE;MAAQ;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,EAED3B,OAAO,iBAAIL,OAAA;MAAA4B,QAAA,eAAG5B,OAAA;QAAA4B,QAAA,EAASvB;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAjDID,cAAc;EAAA,QACQJ,SAAS;AAAA;AAAAwC,EAAA,GAD/BpC,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}