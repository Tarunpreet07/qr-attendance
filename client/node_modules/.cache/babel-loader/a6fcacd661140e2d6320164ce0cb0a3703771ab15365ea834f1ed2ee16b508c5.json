{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaurt\\\\Documents\\\\PROJECTS\\\\qr\\\\client\\\\src\\\\components\\\\Scanner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Html5Qrcode } from 'html5-qrcode';\nimport API from '../api';\nimport { useParams } from 'react-router-dom';\nimport { getUser } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Scanner() {\n  _s();\n  const {\n    sessionToken\n  } = useParams();\n  const user = getUser();\n  useEffect(() => {\n    const scanner = new Html5Qrcode(\"qr-reader\");\n    scanner.start({\n      facingMode: \"environment\"\n    }, {\n      fps: 10,\n      qrbox: 250\n    }, async decodedText => {\n      if (decodedText !== user.qrToken) {\n        alert(\"Scanned QR does not match your QR\");\n        scanner.stop();\n        return;\n      }\n      try {\n        await API.post('/attendance/scan', {\n          sessionToken,\n          qrScanned: decodedText\n        });\n        alert(\"Attendance marked!\");\n        scanner.stop();\n      } catch (err) {\n        var _err$response, _err$response$data;\n        alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error marking attendance\");\n        scanner.stop();\n      }\n    }, err => {}).catch(console.error);\n    return () => scanner.stop().catch(console.error);\n  }, [sessionToken, user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"qr-reader\",\n    style: {\n      width: '300px',\n      marginTop: '20px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n_s(Scanner, \"0qXgbnAAEOowAYxDeV9+vYaE1yM=\", false, function () {\n  return [useParams];\n});\n_c = Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useEffect","Html5Qrcode","API","useParams","getUser","jsxDEV","_jsxDEV","Scanner","_s","sessionToken","user","scanner","start","facingMode","fps","qrbox","decodedText","qrToken","alert","stop","post","qrScanned","err","_err$response","_err$response$data","response","data","message","catch","console","error","id","style","width","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kaurt/Documents/PROJECTS/qr/client/src/components/Scanner.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Html5Qrcode } from 'html5-qrcode';\r\nimport API from '../api';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getUser } from '../utils';\r\n\r\nexport default function Scanner() {\r\n  const { sessionToken } = useParams();\r\n  const user = getUser();\r\n\r\n  useEffect(() => {\r\n    const scanner = new Html5Qrcode(\"qr-reader\");\r\n\r\n    scanner.start(\r\n      { facingMode: \"environment\" },\r\n      { fps: 10, qrbox: 250 },\r\n      async decodedText => {\r\n        if (decodedText !== user.qrToken) {\r\n          alert(\"Scanned QR does not match your QR\");\r\n          scanner.stop();\r\n          return;\r\n        }\r\n        try {\r\n          await API.post('/attendance/scan', {\r\n            sessionToken,\r\n            qrScanned: decodedText\r\n          });\r\n          alert(\"Attendance marked!\");\r\n          scanner.stop();\r\n        } catch (err) {\r\n          alert(err.response?.data?.message || \"Error marking attendance\");\r\n          scanner.stop();\r\n        }\r\n      },\r\n      err => {}\r\n    ).catch(console.error);\r\n\r\n    return () => scanner.stop().catch(console.error);\r\n  }, [sessionToken, user]);\r\n\r\n  return <div id=\"qr-reader\" style={{ width: '300px', marginTop: '20px' }} />;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,cAAc;AAC1C,OAAOC,GAAG,MAAM,QAAQ;AACxB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAa,CAAC,GAAGN,SAAS,CAAC,CAAC;EACpC,MAAMO,IAAI,GAAGN,OAAO,CAAC,CAAC;EAEtBJ,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAG,IAAIV,WAAW,CAAC,WAAW,CAAC;IAE5CU,OAAO,CAACC,KAAK,CACX;MAAEC,UAAU,EAAE;IAAc,CAAC,EAC7B;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAI,CAAC,EACvB,MAAMC,WAAW,IAAI;MACnB,IAAIA,WAAW,KAAKN,IAAI,CAACO,OAAO,EAAE;QAChCC,KAAK,CAAC,mCAAmC,CAAC;QAC1CP,OAAO,CAACQ,IAAI,CAAC,CAAC;QACd;MACF;MACA,IAAI;QACF,MAAMjB,GAAG,CAACkB,IAAI,CAAC,kBAAkB,EAAE;UACjCX,YAAY;UACZY,SAAS,EAAEL;QACb,CAAC,CAAC;QACFE,KAAK,CAAC,oBAAoB,CAAC;QAC3BP,OAAO,CAACQ,IAAI,CAAC,CAAC;MAChB,CAAC,CAAC,OAAOG,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACZN,KAAK,CAAC,EAAAK,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI,0BAA0B,CAAC;QAChEhB,OAAO,CAACQ,IAAI,CAAC,CAAC;MAChB;IACF,CAAC,EACDG,GAAG,IAAI,CAAC,CACV,CAAC,CAACM,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IAEtB,OAAO,MAAMnB,OAAO,CAACQ,IAAI,CAAC,CAAC,CAACS,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EAClD,CAAC,EAAE,CAACrB,YAAY,EAAEC,IAAI,CAAC,CAAC;EAExB,oBAAOJ,OAAA;IAAKyB,EAAE,EAAC,WAAW;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7E;AAAC9B,EAAA,CAnCuBD,OAAO;EAAA,QACJJ,SAAS;AAAA;AAAAoC,EAAA,GADZhC,OAAO;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}